// <auto-generated />
using System;
using Actividad18.Server.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Actividad18.Server.Migrations
{
    [DbContext(typeof(ContextoBibliotecaUDC))]
    [Migration("20230522051834_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Actividad18.Shared.Models.Libro", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("ISBN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PrestamosId")
                        .HasColumnType("int");

                    b.Property<string>("autor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("disponible")
                        .HasColumnType("int");

                    b.Property<string>("titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PrestamosId");

                    b.ToTable("Libro");
                });

            modelBuilder.Entity("Actividad18.Shared.Models.Prestamos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("FechaDevop")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaPresta")
                        .HasColumnType("datetime2");

                    b.Property<int>("LibroId")
                        .HasColumnType("int");

                    b.Property<int?>("UsuariosId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuariosId");

                    b.ToTable("Prestamos");
                });

            modelBuilder.Entity("Actividad18.Shared.Models.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Actividad18.Shared.Models.Libro", b =>
                {
                    b.HasOne("Actividad18.Shared.Models.Prestamos", "Prestamos")
                        .WithMany("Libros")
                        .HasForeignKey("PrestamosId");

                    b.Navigation("Prestamos");
                });

            modelBuilder.Entity("Actividad18.Shared.Models.Prestamos", b =>
                {
                    b.HasOne("Actividad18.Shared.Models.Usuarios", "Usuarios")
                        .WithMany("Prestamos")
                        .HasForeignKey("UsuariosId");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Actividad18.Shared.Models.Prestamos", b =>
                {
                    b.Navigation("Libros");
                });

            modelBuilder.Entity("Actividad18.Shared.Models.Usuarios", b =>
                {
                    b.Navigation("Prestamos");
                });
#pragma warning restore 612, 618
        }
    }
}
